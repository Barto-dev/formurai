{
  "version": 3,
  "sources": ["../node_modules/livr/lib/util.js", "../node_modules/livr/lib/Validator.js", "../node_modules/livr/lib/rules/common/required.js", "../node_modules/livr/lib/rules/common/not_empty.js", "../node_modules/livr/lib/rules/common/not_empty_list.js", "../node_modules/livr/lib/rules/common/any_object.js", "../node_modules/livr/lib/rules/string/string.js", "../node_modules/livr/lib/rules/string/eq.js", "../node_modules/livr/lib/rules/string/one_of.js", "../node_modules/livr/lib/rules/string/max_length.js", "../node_modules/livr/lib/rules/string/min_length.js", "../node_modules/livr/lib/rules/string/length_equal.js", "../node_modules/livr/lib/rules/string/length_between.js", "../node_modules/livr/lib/rules/string/like.js", "../node_modules/livr/lib/rules/numeric/integer.js", "../node_modules/livr/lib/rules/numeric/positive_integer.js", "../node_modules/livr/lib/rules/numeric/decimal.js", "../node_modules/livr/lib/rules/numeric/positive_decimal.js", "../node_modules/livr/lib/rules/numeric/max_number.js", "../node_modules/livr/lib/rules/numeric/min_number.js", "../node_modules/livr/lib/rules/numeric/number_between.js", "../node_modules/livr/lib/rules/special/email.js", "../node_modules/livr/lib/rules/special/equal_to_field.js", "../node_modules/livr/lib/rules/special/url.js", "../node_modules/livr/lib/rules/special/iso_date.js", "../node_modules/livr/lib/rules/meta/nested_object.js", "../node_modules/livr/lib/rules/meta/variable_object.js", "../node_modules/livr/lib/rules/meta/list_of.js", "../node_modules/livr/lib/rules/meta/list_of_objects.js", "../node_modules/livr/lib/rules/meta/or.js", "../node_modules/livr/lib/rules/meta/list_of_different_objects.js", "../node_modules/livr/lib/rules/modifiers/default.js", "../node_modules/livr/lib/rules/modifiers/trim.js", "../node_modules/livr/lib/rules/modifiers/to_lc.js", "../node_modules/livr/lib/rules/modifiers/to_uc.js", "../node_modules/livr/lib/rules/modifiers/remove.js", "../node_modules/livr/lib/rules/modifiers/leave_only.js", "../node_modules/livr/lib/LIVR.js", "../src/Formurai.js"],
  "sourcesContent": ["module.exports = {\n    isPrimitiveValue(value) {\n        if (typeof value == 'string') return true;\n        if (typeof value == 'number' && isFinite(value)) return true;\n        if (typeof value == 'boolean') return true;\n        return false;\n    },\n\n    looksLikeNumber(value) {\n        if (!isNaN(+value)) return true;\n        return false;\n    },\n\n    isObject(obj) {\n        return Object(obj) === obj && Object.getPrototypeOf(obj) === Object.prototype;\n    },\n\n    isEmptyObject(map) {\n        for (const key in map) {\n            if (map.hasOwnProperty(key)) {\n                return false;\n            }\n        }\n        return true;\n    },\n\n    escapeRegExp(str) {\n        return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\n    },\n\n    isNoValue(value) {\n        return value === undefined || value === null || value === '';\n    }\n};\n", "'use strict';\n\nconst util = require('./util');\n\nconst DEFAULT_RULES = {};\nlet IS_DEFAULT_AUTO_TRIM = 0;\n\nclass Validator {\n    constructor(livrRules, isAutoTrim) {\n        this.isPrepared = false;\n        this.livrRules = livrRules;\n        this.validators = {};\n        this.validatorBuilders = {};\n        this.errors = null;\n\n        if (isAutoTrim !== null && isAutoTrim !== undefined) {\n            this.isAutoTrim = isAutoTrim;\n        } else {\n            this.isAutoTrim = IS_DEFAULT_AUTO_TRIM;\n        }\n\n        this.registerRules(DEFAULT_RULES);\n    }\n\n    static getDefaultRules() {\n        return DEFAULT_RULES;\n    }\n\n    static registerAliasedDefaultRule(alias) {\n        if (!alias.name) throw 'Alias name required';\n\n        DEFAULT_RULES[alias.name] = this._buildAliasedRule(alias.rules, alias.error);\n    }\n\n    static registerDefaultRules(rules) {\n        for (const ruleName in rules) {\n            DEFAULT_RULES[ruleName] = rules[ruleName];\n        }\n    }\n\n    static defaultAutoTrim(isAutoTrim) {\n        IS_DEFAULT_AUTO_TRIM = !!isAutoTrim;\n    }\n\n    static _buildAliasedRule(rules, errorCode) {\n        if (!rules) throw 'Alias rules required';\n\n        const livr = { value: rules };\n\n        return ruleBuilders => {\n            // ruleBuilders comes always as a last argument\n            // we register them to support custom rules in aliases\n            const validator = new Validator(livr).registerRules(ruleBuilders).prepare();\n\n            return (value, undefined, outputArr) => {\n                const result = validator.validate({ value });\n\n                if (result) {\n                    outputArr.push(result.value);\n                    return;\n                } else {\n                    return errorCode || validator.getErrors().value;\n                }\n            };\n        };\n    }\n\n    prepare() {\n        const allRules = this.livrRules;\n\n        for (const field in allRules) {\n            let fieldRules = allRules[field];\n\n            if (!Array.isArray(fieldRules)) {\n                fieldRules = [fieldRules];\n            }\n\n            const validators = [];\n\n            for (const fieldRule of fieldRules) {\n                const parsed = this._parseRule(fieldRule);\n                validators.push(this._buildValidator(parsed.name, parsed.args));\n            }\n\n            this.validators[field] = validators;\n        }\n\n        this.isPrepared = true;\n        return this;\n    }\n\n    validate(data) {\n        if (!this.isPrepared) this.prepare();\n\n        if (!util.isObject(data)) {\n            this.errors = 'FORMAT_ERROR';\n            return;\n        }\n\n        if (this.isAutoTrim) {\n            data = this._autoTrim(data);\n        }\n\n        const errors = {};\n        const result = {};\n\n        for (const fieldName in this.validators) {\n            const validators = this.validators[fieldName];\n            if (!validators || !validators.length) continue;\n\n            const value = data[fieldName];\n\n            for (const validator of validators) {\n                const fieldResultArr = [];\n\n                const errCode = validator(\n                    result.hasOwnProperty(fieldName) ? result[fieldName] : value,\n                    data,\n                    fieldResultArr\n                );\n\n                if (errCode) {\n                    errors[fieldName] = errCode;\n                    break;\n                } else if (fieldResultArr.length) {\n                    result[fieldName] = fieldResultArr[0];\n                } else if (data.hasOwnProperty(fieldName) && !result.hasOwnProperty(fieldName)) {\n                    result[fieldName] = value;\n                }\n            }\n        }\n\n        if (util.isEmptyObject(errors)) {\n            this.errors = null;\n            return result;\n        } else {\n            this.errors = errors;\n            return false;\n        }\n    }\n\n    getErrors() {\n        return this.errors;\n    }\n\n    registerRules(rules) {\n        for (const ruleName in rules) {\n            this.validatorBuilders[ruleName] = rules[ruleName];\n        }\n\n        return this;\n    }\n\n    registerAliasedRule(alias) {\n        if (!alias.name) throw 'Alias name required';\n\n        this.validatorBuilders[alias.name] = this.constructor._buildAliasedRule(\n            alias.rules,\n            alias.error\n        );\n\n        return this;\n    }\n\n    getRules() {\n        return this.validatorBuilders;\n    }\n\n    _parseRule(livrRule) {\n        let name;\n        let args;\n\n        if (util.isObject(livrRule)) {\n            name = Object.keys(livrRule)[0];\n            args = livrRule[name];\n\n            if (!Array.isArray(args)) args = [args];\n        } else {\n            name = livrRule;\n            args = [];\n        }\n\n        return { name, args };\n    }\n\n    _buildValidator(name, args) {\n        if (!this.validatorBuilders[name]) {\n            throw 'Rule [' + name + '] not registered';\n        }\n\n        const allArgs = [];\n\n        allArgs.push.apply(allArgs, args);\n        allArgs.push(this.getRules());\n\n        return this.validatorBuilders[name].apply(null, allArgs);\n    }\n\n    _autoTrim(data) {\n        const dataType = typeof data;\n\n        if (dataType !== 'object' && data) {\n            if (data.replace) {\n                return data.replace(/^\\s*/, '').replace(/\\s*$/, '');\n            } else {\n                return data;\n            }\n        } else if (dataType == 'object' && Array.isArray(data)) {\n            const trimmedData = [];\n\n            for (const item of data) {\n                trimmedData.push(this._autoTrim(item));\n            }\n\n            return trimmedData;\n        } else if (dataType == 'object' && util.isObject(data)) {\n            const trimmedData = {};\n\n            for (const key in data) {\n                if (data.hasOwnProperty(key)) {\n                    trimmedData[key] = this._autoTrim(data[key]);\n                }\n            }\n\n            return trimmedData;\n        }\n\n        return data;\n    }\n}\n\nmodule.exports = Validator;\n", "const util = require('../../util');\n\nfunction required() {\n    return value => {\n        if (util.isNoValue(value)) {\n            return 'REQUIRED';\n        }\n\n        return;\n    };\n};\n\nmodule.exports = required;", "function not_empty() {\n    return value => {\n        if (value !== null && value !== undefined && value === '') {\n            return 'CANNOT_BE_EMPTY';\n        }\n\n        return;\n    };\n}\n\nmodule.exports = not_empty;", "function not_empty_list() {\n    return list => {\n        if (list === undefined || list === '') return 'CANNOT_BE_EMPTY';\n        if (!Array.isArray(list)) return 'FORMAT_ERROR';\n        if (list.length < 1) return 'CANNOT_BE_EMPTY';\n        return;\n    };\n};\n\nmodule.exports = not_empty_list;", "const util = require('../../util');\n\nfunction any_object() {\n    return value => {\n        if (util.isNoValue(value)) return;\n\n        if (!util.isObject(value)) {\n            return 'FORMAT_ERROR';\n        }\n    };\n};\n\nmodule.exports = any_object;", "const util = require('../../util');\n\nfunction string() {\n    return (value, params, outputArr) => {\n        if (util.isNoValue(value)) return;\n        if (!util.isPrimitiveValue(value)) return 'FORMAT_ERROR';\n\n        outputArr.push(value + '');\n        return;\n    };\n}\n\nmodule.exports = string;", "const util = require('../../util');\n\nfunction eq(allowedValue) {\n    return (value, params, outputArr) => {\n        if (util.isNoValue(value)) return;\n        if (!util.isPrimitiveValue(value)) return 'FORMAT_ERROR';\n\n        if (value + '' === allowedValue + '') {\n            outputArr.push(allowedValue);\n            return;\n        }\n\n        return 'NOT_ALLOWED_VALUE';\n    };\n}\n\nmodule.exports = eq;", "const util = require('../../util');\n\nfunction one_of(allowedValues) {\n    if (!Array.isArray(allowedValues)) {\n        allowedValues = Array.prototype.slice.call(arguments);\n        allowedValues.pop(); // pop ruleBuilders\n    }\n\n    return (value, params, outputArr) => {\n        if (util.isNoValue(value)) return;\n\n        if (!util.isPrimitiveValue(value)) return 'FORMAT_ERROR';\n\n        for (const allowedValue of allowedValues) {\n            if (value + '' === allowedValue + '') {\n                outputArr.push(allowedValue);\n                return;\n            }\n        }\n\n        return 'NOT_ALLOWED_VALUE';\n    };\n}\n\nmodule.exports = one_of;", "const util = require('../../util');\n \nfunction max_length(maxLength) {\n    return (value, params, outputArr) => {\n        if (util.isNoValue(value)) return;\n        if (!util.isPrimitiveValue(value)) return 'FORMAT_ERROR';\n\n        value += '';\n        if (value.length > maxLength) return 'TOO_LONG';\n        outputArr.push(value);\n    };\n}\n\nmodule.exports = max_length;", "const util = require('../../util');\n\nfunction min_length(minLength) {\n    return (value, params, outputArr) => {\n        if (util.isNoValue(value)) return;\n        if (!util.isPrimitiveValue(value)) return 'FORMAT_ERROR';\n\n        value += '';\n        if (value.length < minLength) return 'TOO_SHORT';\n        outputArr.push(value);\n    };\n}\n\nmodule.exports = min_length;", "const util = require('../../util');\n\nfunction length_equal(length) {\n    return (value, params, outputArr) => {\n        if (util.isNoValue(value)) return;\n        if (!util.isPrimitiveValue(value)) return 'FORMAT_ERROR';\n\n        value += '';\n        if (value.length < length) return 'TOO_SHORT';\n        if (value.length > length) return 'TOO_LONG';\n        outputArr.push(value);\n    };\n}\n\nmodule.exports = length_equal;", "const util = require('../../util');\n\nfunction length_between(minLength, maxLength) {\n    return (value, params, outputArr) => {\n        if (util.isNoValue(value)) return;\n        if (!util.isPrimitiveValue(value)) return 'FORMAT_ERROR';\n\n        value += '';\n        if (value.length < minLength) return 'TOO_SHORT';\n        if (value.length > maxLength) return 'TOO_LONG';\n        outputArr.push(value);\n    };\n}\n\nmodule.exports = length_between;", "const util = require('../../util');\n\nfunction like(reStr, flags) {\n    const isIgnoreCase = arguments.length === 3 && flags.match('i');\n    const re = new RegExp(reStr, isIgnoreCase ? 'i' : '');\n\n    return (value, params, outputArr) => {\n        if (util.isNoValue(value)) return;\n\n        if (!util.isPrimitiveValue(value)) return 'FORMAT_ERROR';\n\n        value += '';\n        if (!value.match(re)) return 'WRONG_FORMAT';\n        outputArr.push(value);\n    };\n}\n\nmodule.exports = like;", "const util = require('../../util');\n\nfunction integer() {\n    return (value, params, outputArr) => {\n        if (util.isNoValue(value)) return;\n        if (!util.isPrimitiveValue(value)) return 'FORMAT_ERROR';\n        if (!util.looksLikeNumber(value)) return 'NOT_INTEGER';\n\n        if (!Number.isInteger(+value)) return 'NOT_INTEGER';\n        outputArr.push(+value);\n    };\n}\n\nmodule.exports = integer;", "const util = require('../../util');\n\nfunction positive_integer() {\n    return (value, params, outputArr) => {\n        if (util.isNoValue(value)) return;\n        if (!util.isPrimitiveValue(value)) return 'FORMAT_ERROR';\n        if (!util.looksLikeNumber(value)) return 'NOT_POSITIVE_INTEGER';\n\n        if (!Number.isInteger(+value) || +value < 1) return 'NOT_POSITIVE_INTEGER';\n        outputArr.push(+value);\n    };\n}\n\nmodule.exports = positive_integer;", "const util = require('../../util');\n\nfunction decimal() {\n    return (value, params, outputArr) => {\n        if (util.isNoValue(value)) return;\n        if (!util.isPrimitiveValue(value)) return 'FORMAT_ERROR';\n        if (!util.looksLikeNumber(value)) return 'NOT_DECIMAL';\n\n        value += '';\n        if (!/^(?:\\-?(?:(?:[0-9]+\\.[0-9]+)|(?:[0-9]+)))$/.test(value)) return 'NOT_DECIMAL';\n        outputArr.push(+value);\n    };\n}\n\nmodule.exports = decimal;", "const util = require('../../util');\n\nfunction positive_decimal() {\n    return (value, params, outputArr) => {\n        if (util.isNoValue(value)) return;\n        if (!util.isPrimitiveValue(value)) return 'FORMAT_ERROR';\n        if (!util.looksLikeNumber(value)) return 'NOT_POSITIVE_DECIMAL';\n\n        if (Number.isNaN(+value) || +value <= 0) return 'NOT_POSITIVE_DECIMAL';\n        outputArr.push(+value);\n    };\n}\n\nmodule.exports = positive_decimal;\n", "const util = require('../../util');\n\nfunction max_number(maxNumber) {\n    return (value, params, outputArr) => {\n        if (util.isNoValue(value)) return;\n        if (!util.isPrimitiveValue(value)) return 'FORMAT_ERROR';\n        if (!util.looksLikeNumber(value)) return 'NOT_NUMBER';\n\n        if (+value > +maxNumber) return 'TOO_HIGH';\n        outputArr.push(+value);\n    };\n}\n\nmodule.exports = max_number;", "const util = require('../../util');\n\nfunction min_number(minNumber) {\n    return (value, params, outputArr) => {\n        if (util.isNoValue(value)) return;\n        if (!util.isPrimitiveValue(value)) return 'FORMAT_ERROR';\n        if (!util.looksLikeNumber(value)) return 'NOT_NUMBER';\n\n        if (+value < +minNumber) return 'TOO_LOW';\n        outputArr.push(+value);\n    };\n}\n\nmodule.exports = min_number;", "const util = require('../../util');\n\nfunction number_between(minNumber, maxNumber) {\n    return (value, params, outputArr) => {\n        if (util.isNoValue(value)) return;\n        if (!util.isPrimitiveValue(value)) return 'FORMAT_ERROR';\n        if (!util.looksLikeNumber(value)) return 'NOT_NUMBER';\n\n        if (+value < +minNumber) return 'TOO_LOW';\n        if (+value > +maxNumber) return 'TOO_HIGH';\n        outputArr.push(+value);\n    };\n}\n\nmodule.exports = number_between;", "const util = require('../../util');\n\nfunction email() {\n    var emailRe = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    return value => {\n        if (util.isNoValue(value)) return;\n        if (!util.isPrimitiveValue(value)) return 'FORMAT_ERROR';\n\n        value += '';\n        if (!emailRe.test(value)) return 'WRONG_EMAIL';\n        if (/\\@.*\\@/.test(value)) return 'WRONG_EMAIL';\n        if (/\\@.*_/.test(value)) return 'WRONG_EMAIL';\n        return;\n    };\n}\n\nmodule.exports = email;", "const util = require('../../util');\n\nfunction equal_to_field(field) {\n    return (value, params) => {\n        if (util.isNoValue(value)) return;\n        if (!util.isPrimitiveValue(value)) return 'FORMAT_ERROR';\n\n        if (value != params[field]) return 'FIELDS_NOT_EQUAL';\n        return;\n    };\n}\n\nmodule.exports = equal_to_field;", "const util = require('../../util');\n\nfunction url() {\n    const urlReStr =\n        '^(?:(?:http|https)://)(?:\\\\S+(?::\\\\S*)?@)?(?:(?:(?:[1-9]\\\\d?|1\\\\d\\\\d|2[0-1]\\\\d|22[0-3])(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}(?:\\\\.(?:[0-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))|(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)*(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,})))\\\\.?|localhost)(?::\\\\d{2,5})?(?:[/?#]\\\\S*)?$';\n    const urlRe = new RegExp(urlReStr, 'i');\n\n    return value => {\n        if (util.isNoValue(value)) return;\n        if (!util.isPrimitiveValue(value)) return 'FORMAT_ERROR';\n\n        if (value.length < 2083 && urlRe.test(value)) return;\n        return 'WRONG_URL';\n    };\n}\n\nmodule.exports = url;", "const util = require('../../util');\n\nfunction iso_date() {\n    return value => {\n        if (util.isNoValue(value)) return;\n        if (!util.isPrimitiveValue(value)) return 'FORMAT_ERROR';\n\n        const matched = value.match(/^(\\d{4})-([0-1][0-9])-([0-3][0-9])$/);\n\n        if (matched) {\n            const epoch = Date.parse(value);\n            if (!epoch && epoch !== 0) return 'WRONG_DATE';\n\n            const d = new Date(epoch);\n            d.setTime(d.getTime() + d.getTimezoneOffset() * 60 * 1000);\n\n            if (\n                d.getFullYear() == matched[1] &&\n                d.getMonth() + 1 == +matched[2] &&\n                d.getDate() == +matched[3]\n            ) {\n                return;\n            }\n        }\n\n        return 'WRONG_DATE';\n    };\n}\n\nmodule.exports = iso_date;", "const Validator = require('../../Validator');\nconst util = require('../../util');\n\nfunction nested_object(livr, ruleBuilders) {\n    const validator = new Validator(livr).registerRules(ruleBuilders).prepare();\n\n    return (nestedObject, params, outputArr) => {\n        if (util.isNoValue(nestedObject)) return;\n        if (!util.isObject(nestedObject)) return 'FORMAT_ERROR';\n\n        const result = validator.validate(nestedObject);\n\n        if (result) {\n            outputArr.push(result);\n            return;\n        } else {\n            return validator.getErrors();\n        }\n    };\n}\n\nmodule.exports = nested_object;", "const Validator = require('../../Validator');\nconst util = require('../../util');\n\nfunction variable_object(selectorField, livrs, ruleBuilders) {\n    const validators = {};\n\n    for (const selectorValue in livrs) {\n        const validator = new Validator(livrs[selectorValue])\n            .registerRules(ruleBuilders)\n            .prepare();\n        validators[selectorValue] = validator;\n    }\n\n    return (object, params, outputArr) => {\n        if (util.isNoValue(object)) return;\n\n        if (\n            !util.isObject(object) ||\n            !object[selectorField] ||\n            !validators[object[selectorField]]\n        ) {\n            return 'FORMAT_ERROR';\n        }\n\n        const validator = validators[object[selectorField]];\n        const result = validator.validate(object);\n\n        if (result) {\n            outputArr.push(result);\n            return;\n        } else {\n            return validator.getErrors();\n        }\n    };\n}\n\nmodule.exports = variable_object;\n", "const Validator = require('../../Validator');\nconst util = require('../../util');\n\nfunction list_of(rules, ruleBuilders) {\n    if (!Array.isArray(rules)) {\n        rules = Array.prototype.slice.call(arguments);\n        ruleBuilders = rules.pop();\n    }\n\n    const livr = { field: rules };\n    const validator = new Validator(livr).registerRules(ruleBuilders).prepare();\n\n    return (values, params, outputArr) => {\n        if (util.isNoValue(values)) return;\n\n        if (!Array.isArray(values)) return 'FORMAT_ERROR';\n\n        const results = [];\n        const errors = [];\n        let hasErrors = false;\n\n        for (const value of values) {\n            const result = validator.validate({ field: value });\n\n            if (result) {\n                results.push(result.field);\n                errors.push(null);\n            } else {\n                hasErrors = true;\n                errors.push(validator.getErrors().field);\n                results.push(null);\n            }\n        }\n\n        if (hasErrors) {\n            return errors;\n        } else {\n            outputArr.push(results);\n            return;\n        }\n    };\n}\n\nmodule.exports = list_of;", "const Validator = require('../../Validator');\nconst util = require('../../util');\n\nfunction list_of_objects(livr, ruleBuilders) {\n    const validator = new Validator(livr).registerRules(ruleBuilders).prepare();\n\n    return (objects, params, outputArr) => {\n        if (util.isNoValue(objects)) return;\n        if (!Array.isArray(objects)) return 'FORMAT_ERROR';\n\n        const results = [];\n        const errors = [];\n        let hasErrors = false;\n\n        for (const object of objects) {\n            const result = validator.validate(object);\n\n            if (result) {\n                results.push(result);\n                errors.push(null);\n            } else {\n                hasErrors = true;\n                errors.push(validator.getErrors());\n                results.push(null);\n            }\n        }\n\n        if (hasErrors) {\n            return errors;\n        } else {\n            outputArr.push(results);\n            return;\n        }\n    };\n}\n\nmodule.exports = list_of_objects;", "const Validator = require('../../Validator');\n\nfunction or() {\n    const ruleSets = Array.prototype.slice.call(arguments);\n    const ruleBuilders = ruleSets.pop();\n\n    const validators = ruleSets.map(rules => {\n        const livr = { field: rules };\n        const validator = new Validator(livr).registerRules(ruleBuilders).prepare();\n\n        return validator;\n    });\n\n    return (value, params, outputArr) => {\n        let lastError;\n\n        for (const validator of validators) {\n            const result = validator.validate({ field: value });\n\n            if (result) {\n                outputArr.push(result.field);\n                return;\n            } else {\n                lastError = validator.getErrors().field;\n            }\n        }\n\n        return lastError;\n    };\n}\n\nmodule.exports = or;", "const Validator = require('../../Validator');\nconst util = require('../../util');\n\nfunction list_of_different_objects(selectorField, livrs, ruleBuilders) {\n    const validators = {};\n\n    for (const selectorValue in livrs) {\n        const validator = new Validator(livrs[selectorValue])\n            .registerRules(ruleBuilders)\n            .prepare();\n        validators[selectorValue] = validator;\n    }\n\n    return (objects, params, outputArr) => {\n        if (util.isNoValue(objects)) return;\n        if (!Array.isArray(objects)) return 'FORMAT_ERROR';\n\n        const results = [];\n        const errors = [];\n        let hasErrors = false;\n\n        for (const object of objects) {\n            if (\n                typeof object != 'object' ||\n                !object[selectorField] ||\n                !validators[object[selectorField]]\n            ) {\n                errors.push('FORMAT_ERROR');\n                continue;\n            }\n\n            const validator = validators[object[selectorField]];\n            const result = validator.validate(object);\n\n            if (result) {\n                results.push(result);\n                errors.push(null);\n            } else {\n                hasErrors = true;\n                errors.push(validator.getErrors());\n                results.push(null);\n            }\n        }\n\n        if (hasErrors) {\n            return errors;\n        } else {\n            outputArr.push(results);\n            return;\n        }\n    };\n}\n\nmodule.exports = list_of_different_objects;", "const util = require('../../util');\n\nmodule.exports = defaultValue => {\n    return (value, params, outputArr) => {\n        if (util.isNoValue(value)) {\n            outputArr.push(defaultValue);\n        }\n    };\n}\n\n\n", "const util = require('../../util');\n\nfunction trim() {\n    return (value, params, outputArr) => {\n        if (util.isNoValue(value) || typeof value === 'object') return;\n\n        value += ''; // TODO just do not trim numbers\n        outputArr.push(value.replace(/^\\s*/, '').replace(/\\s*$/, ''));\n    };\n}\n\nmodule.exports = trim;", "const util = require('../../util');\n\nfunction to_lc() {\n    return (value, params, outputArr) => {\n        if (util.isNoValue(value) || typeof value === 'object') return;\n\n        value += ''; // TODO just skip numbers\n        outputArr.push(value.toLowerCase());\n    };\n}\n\nmodule.exports = to_lc;", "const util = require('../../util');\n\nfunction to_uc() {\n    return (value, params, outputArr) => {\n        if (util.isNoValue(value) || typeof value === 'object') return;\n\n        value += ''; // TODO just skip numbers\n        outputArr.push(value.toUpperCase());\n    };\n}\n\nmodule.exports = to_uc;", "const util = require('../../util');\n\nfunction remove(chars) {\n    chars = util.escapeRegExp(chars);\n    const re = new RegExp('[' + chars + ']', 'g');\n\n    return (value, params, outputArr) => {\n        if (util.isNoValue(value) || typeof value === 'object') return;\n\n        value += ''; // TODO just skip numbers\n        outputArr.push(value.replace(re, ''));\n    };\n}\n\nmodule.exports = remove;", "const util = require('../../util');\n\nfunction leave_only(chars) {\n    chars = util.escapeRegExp(chars);\n    const re = new RegExp('[^' + chars + ']', 'g');\n\n    return (value, params, outputArr) => {\n        if (util.isNoValue(value) || typeof value === 'object') return;\n\n        value += ''; // TODO just skip numbers\n        outputArr.push(value.replace(re, ''));\n    };\n}\n\nmodule.exports = leave_only;", "const Validator = require('./Validator');\nconst util = require('./util');\n\nconst rules = {\n    required:         require('./rules/common/required'),\n    not_empty:        require('./rules/common/not_empty'),\n    not_empty_list:   require('./rules/common/not_empty_list'),\n    any_object:       require('./rules/common/any_object'),\n\n    string:           require('./rules/string/string'),\n    eq:               require('./rules/string/eq'),\n    one_of:           require('./rules/string/one_of'),\n    max_length:       require('./rules/string/max_length'),\n    min_length:       require('./rules/string/min_length'),\n    length_equal:     require('./rules/string/length_equal'),\n    length_between:   require('./rules/string/length_between'),\n    like:             require('./rules/string/like'),\n\n    integer:          require('./rules/numeric/integer'),\n    positive_integer: require('./rules/numeric/positive_integer'),\n    decimal:          require('./rules/numeric/decimal'),\n    positive_decimal: require('./rules/numeric/positive_decimal'),\n    max_number:       require('./rules/numeric/max_number'),\n    min_number:       require('./rules/numeric/min_number'),\n    number_between:   require('./rules/numeric/number_between'),\n\n    email:            require('./rules/special/email'),\n    equal_to_field:   require('./rules/special/equal_to_field'),\n    url:              require('./rules/special/url'),\n    iso_date:         require('./rules/special/iso_date'),\n\n    nested_object:    require('./rules/meta/nested_object'),\n    variable_object:  require('./rules/meta/variable_object'),\n    list_of:          require('./rules/meta/list_of'),\n    list_of_objects:  require('./rules/meta/list_of_objects'),\n    or:               require('./rules/meta/or'),\n    list_of_different_objects: require('./rules/meta/list_of_different_objects'),\n\n    default:          require('./rules/modifiers/default'),\n    trim:             require('./rules/modifiers/trim'),\n    to_lc:            require('./rules/modifiers/to_lc'),\n    to_uc:            require('./rules/modifiers/to_uc'),\n    remove:           require('./rules/modifiers/remove'),\n    leave_only:       require('./rules/modifiers/leave_only')\n};\n\nValidator.registerDefaultRules(rules);\n\nmodule.exports = { Validator, rules, util };\n", "import LIVR from 'livr';\r\n\r\nclass Formurai {\r\n  #form;\r\n  #errorMessages;\r\n  #currentStateMessages\r\n  #isFormValid;\r\n\r\n\r\n  #isAutoTrim;\r\n  #isVibrate;\r\n  #noSubmit;\r\n  #multiStep;\r\n\r\n  #successClass;\r\n  #errorClass;\r\n  #wrapperClass;\r\n  #errorMessageClass;\r\n  #withWrapper;\r\n\r\n  #validationFields;\r\n  #inputErrorsObj;\r\n  #rules;\r\n  #additionalRules\r\n\r\n\r\n  constructor(form, {\r\n    errorClass = 'formurai-error',\r\n    successClass = 'formurai-success',\r\n    wrapperClass = 'formurai-container',\r\n    errorMessageClass = 'formurai-message',\r\n    withWrapper = true,\r\n    autoTrim = true,\r\n    vibrate = true,\r\n    notSubmit = false,\r\n    multiStep = false\r\n  } = {}) {\r\n    this.#form = form;\r\n    this.#isAutoTrim = autoTrim;\r\n    this.#isVibrate = vibrate;\r\n    this.#noSubmit = notSubmit;\r\n    this.#multiStep = multiStep;\r\n\r\n    this.#successClass = successClass;\r\n    this.#errorClass = errorClass;\r\n    this.#wrapperClass = wrapperClass;\r\n    this.#errorMessageClass = errorMessageClass;\r\n    this.#withWrapper = withWrapper;\r\n\r\n    this.#inputErrorsObj = {};\r\n    this.#validationFields = [];\r\n    this.#errorMessages = {};\r\n\r\n    this.#isFormValid = false;\r\n\r\n    this.#autoTrimValues();\r\n\r\n  }\r\n\r\n  init = (rules, messages = {}, state = false) => {\r\n    if (!state && this.#multiStep) {\r\n      throw 'Multi step validation need initial state!'\r\n    }\r\n\r\n    this.#rules = rules;\r\n    this.#errorMessages = messages;\r\n\r\n    if (this.#multiStep) {\r\n      this.#setRulesForCurrentState(state)\r\n    } else {\r\n      this.validator = new LIVR.Validator(rules);\r\n      this.#validationFields = Object.keys(rules);\r\n      this.#currentStateMessages = this.#errorMessages;\r\n    }\r\n\r\n    this.#form.addEventListener('submit', this.#onFormSubmit);\r\n  };\r\n\r\n  destroy = () => {\r\n    this.validator = null;\r\n    this.#validationFields = [];\r\n    this.#errorMessages = {};\r\n    this.#form.removeEventListener('submit', this.#onFormSubmit);\r\n  }\r\n\r\n  changeState = (state) => {\r\n    if (this.#multiStep) {\r\n      this.#setRulesForCurrentState(state)\r\n    } else if (!this.#multiStep) {\r\n      throw 'changeState method only works with multi step forms!'\r\n    }\r\n  }\r\n\r\n\r\n  checkForm = () => {\r\n    const data = this.formData\r\n    const validData = this.validator.validate(data);\r\n    if (validData) {\r\n      this.#inputErrorsObj = {};\r\n      this.#isFormValid = true;\r\n      this.#removeInputErrorClasses();\r\n    } else {\r\n      this.#inputErrorsObj = this.validator.getErrors();\r\n      this.#isFormValid = false;\r\n      this.#checkInputsError();\r\n      this.#addInputSuccessClass();\r\n    }\r\n  };\r\n\r\n  addRule = (rules) => {\r\n    if (!rules) {\r\n      return\r\n    }\r\n\r\n    const isArray = Array.isArray(rules);\r\n    this.#additionalRules = rules;\r\n\r\n    if (isArray) {\r\n      rules.forEach(rule => this.validator.registerAliasedRule({...rule}))\r\n    } else {\r\n      this.validator.registerAliasedRule({...rules});\r\n    }\r\n  }\r\n\r\n  get formData() {\r\n    const data = new FormData(this.#form);\r\n    const values = {};\r\n    data.forEach((value, key) => {\r\n      values[key] = value;\r\n    });\r\n    return values;\r\n  }\r\n\r\n  get errors() {\r\n    return this.#inputErrorsObj;\r\n  }\r\n\r\n  get isFormValid() {\r\n    return this.#isFormValid;\r\n  }\r\n\r\n  #setRulesForCurrentState = (state) => {\r\n    this.validator = null;\r\n    this.validator = new LIVR.Validator(this.#rules[state]);\r\n    this.#validationFields = Object.keys(this.#rules[state]);\r\n    this.addRule(this.#additionalRules);\r\n    this.#currentStateMessages = this.#errorMessages[state];\r\n  }\r\n\r\n  #onFormSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    this.checkForm();\r\n    if (this.isFormValid) {\r\n      this.#form.submit();\r\n    } else if (this.#noSubmit) {\r\n      return\r\n    } else if (!this.isFormValid) {\r\n      this.#vibrate();\r\n    }\r\n    console.log(this.formData)\r\n  }\r\n\r\n  #removeInputErrorClasses = () => {\r\n    const errorFields = document.querySelectorAll(`.${this.#errorClass}`);\r\n    errorFields.forEach((input) => input.classList.remove(this.#errorClass));\r\n  };\r\n\r\n  #addInputErrorClass = (inputWrapper) => {\r\n    if (inputWrapper) {\r\n      inputWrapper.classList.remove(this.#successClass);\r\n      inputWrapper.classList.add(this.#errorClass);\r\n    }\r\n  };\r\n\r\n  #checkInputsError = () => {\r\n    this.#removeInputErrorClasses();\r\n    const errorsKey = Object.keys(this.errors);\r\n    if (errorsKey.length) {\r\n      errorsKey.forEach((inputName) => {\r\n        const input = this.#form.querySelector(`[name=\"${inputName}\"]`);\r\n        const inputWrapper = this.#getWrapperElement(input);\r\n        this.#addInputErrorClass(inputWrapper);\r\n        this.#showErrorMessage(inputWrapper, inputName);\r\n      });\r\n    }\r\n  }\r\n\r\n  #addInputSuccessClass = () => {\r\n    this.#validationFields.forEach((inputName) => {\r\n      const input = this.#form.querySelector(`[name=\"${inputName}\"]`);\r\n      const inputWrapper = this.#getWrapperElement(input);\r\n      if (!inputWrapper.classList.contains(this.#errorClass)) {\r\n        inputWrapper.classList.add(this.#successClass);\r\n      }\r\n    });\r\n  };\r\n\r\n  #showErrorMessage = (wrapper, inputName) => {\r\n    const defaultError = this.errors[inputName];\r\n    const customError = this.#currentStateMessages?.[inputName]?.[defaultError];\r\n    const errorMessageBlock = wrapper?.querySelector(`.${this.#errorMessageClass}`);\r\n    if (defaultError && customError && errorMessageBlock) {\r\n      errorMessageBlock.innerText = customError;\r\n    }\r\n  };\r\n\r\n  // \u0412\u043E\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043C \u044D\u043B\u0435\u043C\u0435\u043D\u0442 \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043C\u043E\u0441\u0442\u0438 \u043E\u0442 \u0442\u043E\u0433\u043E \u0435\u0441\u0442\u044C \u043B\u0438 \u043E\u0431\u0435\u0440\u0442\u043A\u0430 \u0443 \u044D\u043B\u0435\u043C\u0435\u043D\u0442\u0430\r\n  #getWrapperElement = (input) => {\r\n    if (this.#withWrapper) {\r\n      return input.closest(`.${this.#wrapperClass}`);\r\n    } else {\r\n      return input;\r\n    }\r\n  }\r\n\r\n  #vibrate = () => {\r\n    if (window.navigator.vibrate && this.#isVibrate) {\r\n      window.navigator.vibrate([300, 100, 300]);\r\n    }\r\n  };\r\n\r\n  #autoTrimValues = () => {\r\n    if (this.#isAutoTrim) {\r\n      LIVR.Validator.defaultAutoTrim(true);\r\n    }\r\n  };\r\n}\r\n\r\nexport default Formurai;\r\n"],
  "mappings": "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",
  "names": []
}
